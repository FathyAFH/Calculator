///////////////////////////////////////////////////////////////////////Version 9.4.1/////////////////////////////////////////////////////////////////
#include "std_lib_facilities.h"

struct Date {
	int y, m, d; // struct Date is a user defined data type which combines different data types under one single name. So the data object will simply print 3 ints: Year, Month and date in order
};

void init_date(Date& date, int y, int m, int d)
{
	if (y > 0)
		date.y = y;
	else
		error("Invalid year");
	if (m < 12 && m > 0)
		date.m = m;
	else
		error("Invalid month");
	if (d > 0 && d < 32)
		date.d = d;
	else
		error("Invalid day");
}

void add_day(Date& date, int n) //Pass by reference which will assign the date a new value after the function is called
{
	date.d += n;
	if (date.d > 31)
	{
		date.m++;
		date.d -= 31;
		if (date.m > 12)
		{
			date.y++;
			date.m -= 12;
		}
	}
}

int main()
{
	Date today;

	init_date(today, 1978, 6, 25);

	cout << "Date: " << today.y << ". " << today.m << ". " << today.d << endl;

	Date tomorrow = today;
	add_day(tomorrow,1);
	cout << "Today: " << today.y << ". " << today.m << ". " << today.d << endl << "Tomorrow: " << tomorrow.y << ". " << tomorrow.m << ". " << tomorrow.d << endl;

    //Date invalid_day;
    //init_date(invalid_day, 2004, 13, -5); // The code will print out invalid month as the month exceeds the limit of 12 months and -5 is not in the day range of 1 to 31


	return 0;
}
